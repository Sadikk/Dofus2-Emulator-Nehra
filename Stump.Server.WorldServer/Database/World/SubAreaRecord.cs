using Stump.Core.IO;
using Stump.Core.Reflection;
using Stump.DofusProtocol.Tools.D2o;
using Stump.ORM;
using Stump.ORM.SubSonic.SQLGeneration.Schema;
using Stump.Server.WorldServer.Database.Achievements;
using Stump.Server.WorldServer.Database.I18n;
using Stump.Server.WorldServer.Game.Achievements;
using Stump.Server.WorldServer.Game.Maps;

namespace Stump.Server.WorldServer.Database.World
{
	[D2OClass("SubArea", "com.ankamagames.dofus.datacenter.world", true), TableName("world_subareas")]
	public sealed class SubAreaRecord : IAutoGeneratedRecord, ISaveIntercepter, IAssignedByD2O
	{
        // FIELDS
		private uint[] m_customWorldMap;
		private string m_customWorldMapCSV;
		private uint[] m_mapsIds;
		private string m_mapsIdsCSV;
		private string m_name;
		private int[] m_shape;
		private string m_shapeCSV;
        private AchievementTemplate m_achievement;
        private uint? m_achievementId;

        // PROPERTIES
		[PrimaryKey("Id", false)]
		public int Id
		{
			get;
			set;
		}
		public uint NameId
		{
			get;
			set;
		}
		public string Name
		{
			get
			{
				string arg_23_0;
				if ((arg_23_0 = this.m_name) == null)
				{
					arg_23_0 = (this.m_name = Singleton<TextManager>.Instance.GetText(this.NameId));
				}
				return arg_23_0;
			}
		}
		public int AreaId
		{
			get;
			set;
		}
		public string MapsIdsCSV
		{
			get
			{
				return this.m_mapsIdsCSV;
			}
			set
			{
				this.m_mapsIdsCSV = value;
                this.m_mapsIds = value.FromCSV<uint>(",");
			}
		}
		[Ignore]
		public uint[] MapsIds
		{
			get
			{
				return this.m_mapsIds;
			}
			set
			{
				this.m_mapsIds = value;
				this.m_mapsIdsCSV = value.ToCSV(",");
			}
		}
		public string ShapeCSV
		{
			get
			{
				return this.m_shapeCSV;
			}
			set
			{
				this.m_shapeCSV = value;
                this.m_shape = value.FromCSV<int>(",");
			}
		}
		[Ignore]
		public int[] Shape
		{
			get
			{
				return this.m_shape;
			}
			set
			{
				this.m_shape = value;
				this.m_shapeCSV = value.ToCSV(",");
			}
		}
		public string CustomWorldMapCSV
		{
			get
			{
				return this.m_customWorldMapCSV;
			}
			set
			{
				this.m_customWorldMapCSV = value;
                this.m_customWorldMap = value.FromCSV<uint>(",");
			}
		}
		[Ignore]
		public uint[] CustomWorldMap
		{
			get
			{
				return this.m_customWorldMap;
			}
			set
			{
				this.m_customWorldMap = value;
				this.m_customWorldMapCSV = value.ToCSV(",");
			}
		}
		public int PackId
		{
			get;
			set;
		}
		[DefaultSetting(2)]
		public Difficulty Difficulty
		{
			get;
			set;
		}
		[DefaultSetting(3)]
		public int SpawnsLimit
		{
			get;
			set;
		}
		public uint? CustomSpawnInterval
		{
			get;
			set;
		}
        [Ignore]
        public AchievementTemplate Achievement
        {
            get
            {
                return this.m_achievement;
            }
            set
            {
                this.m_achievement = value;
                this.m_achievementId = (value == null ? new uint?() : this.m_achievement.Id);
            }
        }
        public uint? AchievementId
        {
            get
            {
                return this.m_achievementId;
            }
            set
            {
                this.m_achievementId = value;
                this.m_achievement = value.HasValue ? Singleton<AchievementManager>.Instance.TryGetAchievement(value.Value) : null;
            }
        }

		public void AssignFields(object d2oObject)
		{
			Stump.DofusProtocol.Classes.SubArea subArea = (Stump.DofusProtocol.Classes.SubArea)d2oObject;
			this.Id = subArea.id;
			this.NameId = subArea.nameId;
			this.AreaId = subArea.areaId;
			this.MapsIds = subArea.mapIds.ToArray();
			this.Shape = subArea.shape.ToArray();
			this.CustomWorldMap = subArea.customWorldMap.ToArray();
			this.PackId = subArea.packId;
			this.Difficulty = Difficulty.Normal;
			this.SpawnsLimit = 3;
		}
		public void BeforeSave(bool insert)
		{
			this.m_mapsIdsCSV = this.m_mapsIds.ToCSV(",");
			this.m_shapeCSV = this.m_shape.ToCSV(",");
			this.m_customWorldMapCSV = this.m_customWorldMap.ToCSV(",");
		}
	}
}
