using Stump.Core.Reflection;
using Stump.ORM;
using Stump.ORM.SubSonic.SQLGeneration.Schema;
using Stump.Server.WorldServer.Game.Alliances;
using Stump.Server.WorldServer.Game.Maps;
using System;

namespace Stump.Server.WorldServer.Database.World
{
    [TableName("world_maps_prism")]
    public sealed class WorldMapPrismRecord : IAutoGeneratedRecord
    {
        private Map m_map;
        private Alliance m_alliance;

        [PrimaryKey("Id", true)]
        public int Id { get; set; }
        public int AllianceId { get; set; }
        public int? MapId { get; set; }
        [Ignore]
        public Map Map
        {
            get
            {
                Map result;
                if (this.MapId.HasValue)
                {
                    if (this.m_map == null)
                    {
                        this.m_map = Singleton<Game.World>.Instance.GetMap(this.MapId.Value);
                    }
                    result = this.m_map;
                }
                else
                {
                    result = null;
                }
                return result;
            }
            set
            {
                this.m_map = value;
                if (value == null)
                {
                    this.MapId = null;
                }
                else
                {
                    this.MapId = new int?(value.Id);
                }
            }
        }
        public int Cell { get; set; }
        public DateTime Date { get; set; }
    }
}
