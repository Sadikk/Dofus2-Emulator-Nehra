using Stump.Core.Reflection;
using Stump.ORM;
using Stump.ORM.SubSonic.SQLGeneration.Schema;
using Stump.Server.WorldServer.Game.Maps;

namespace Stump.Server.WorldServer.Database.World
{
	[TableName("world_maps_taxcollector")]
	public sealed class WorldMapTaxCollectorRecord : IAutoGeneratedRecord
	{
		private Map m_map;
		[PrimaryKey("Id", true)]
		public int Id
		{
			get;
			set;
		}
		public int GuildId
		{
			get;
			set;
		}
		public int? MapId
		{
			get;
			set;
		}
		[Ignore]
		public Map Map
		{
			get
			{
				Map result;
				if (!this.MapId.HasValue)
				{
					result = null;
				}
				else
				{
					Map arg_3F_0;
					if ((arg_3F_0 = this.m_map) == null)
					{
                        arg_3F_0 = (this.m_map = Singleton<Game.World>.Instance.GetMap(this.MapId.Value));
					}
					result = arg_3F_0;
				}
				return result;
			}
			set
			{
				this.m_map = value;
				if (value == null)
				{
					this.MapId = null;
				}
				else
				{
					this.MapId = new int?(value.Id);
				}
			}
		}
		public int Cell
		{
			get;
			set;
		}
		public int Direction
		{
			get;
			set;
		}
		public short FirstNameId
		{
			get;
			set;
		}
		public short LastNameId
		{
			get;
			set;
		}
		public string CallerName
		{
			get;
			set;
		}
		public System.DateTime Date
		{
			get;
			set;
		}
		public int GatheredExperience
		{
			get;
			set;
		}
		public int GatheredKamas
		{
			get;
			set;
		}
		public int AttacksCount
		{
			get;
			set;
		}
	}
}
