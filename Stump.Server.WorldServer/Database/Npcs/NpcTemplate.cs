using Stump.Core.IO;
using Stump.Core.Reflection;
using Stump.DofusProtocol.Tools.D2o;
using Stump.ORM;
using Stump.ORM.SubSonic.SQLGeneration.Schema;
using Stump.Server.WorldServer.Database.I18n;
using Stump.Server.WorldServer.Database.Npcs.Actions;
using Stump.Server.WorldServer.Game.Actors.Look;
using Stump.Server.WorldServer.Game.Actors.RolePlay.Npcs;
using System.Linq;
namespace Stump.Server.WorldServer.Database.Npcs
{
	[D2OClass("Npc", "com.ankamagames.dofus.datacenter.npcs", true), TableName("npcs_templates")]
	public class NpcTemplate : IAutoGeneratedRecord, ISaveIntercepter, IAssignedByD2O
	{
		public delegate void NpcSpawnedEventHandler(NpcTemplate template, Stump.Server.WorldServer.Game.Actors.RolePlay.Npcs.Npc npc);
		private System.Collections.Generic.List<NpcActionDatabase> m_actions;
		private string m_actionsIdsCSV;
		private string m_dialogMessagesIdCSV;
		private string m_dialogRepliesIdCSV;
		private ActorLook m_entityLook;
		private string m_lookAsString;
		private string m_name;
		public event NpcTemplate.NpcSpawnedEventHandler NpcSpawned;
		[PrimaryKey("Id", false)]
		public int Id
		{
			get;
			set;
		}
		public uint NameId
		{
			get;
			set;
		}
		public string Name
		{
			get
			{
				string arg_23_0;
				if ((arg_23_0 = this.m_name) == null)
				{
					arg_23_0 = (this.m_name = Singleton<TextManager>.Instance.GetText(this.NameId));
				}
				return arg_23_0;
			}
		}
		public string DialogMessagesIdCSV
		{
			get
			{
				return this.m_dialogMessagesIdCSV;
			}
			set
			{
				this.m_dialogMessagesIdCSV = value;
                this.DialogMessagesId = this.m_dialogMessagesIdCSV.FromCSV(";", (string x) => x.FromCSV<int>(","));
			}
		}
		[Ignore]
		public int[][] DialogMessagesId
		{
			get;
			set;
		}
		public string DialogRepliesIdCSV
		{
			get
			{
				return this.m_dialogRepliesIdCSV;
			}
			set
			{
				this.m_dialogRepliesIdCSV = value;
                this.DialogRepliesId = this.m_dialogRepliesIdCSV.FromCSV(";", (string x) => x.FromCSV<int>(","));
			}
		}
		[Ignore]
		public int[][] DialogRepliesId
		{
			get;
			set;
		}
		public string ActionsIdsCSV
		{
			get
			{
				return this.m_actionsIdsCSV;
			}
			set
			{
				this.m_actionsIdsCSV = value;
                this.ActionsIds = this.m_actionsIdsCSV.FromCSV<uint>(",");
			}
		}
		[Ignore]
		public uint[] ActionsIds
		{
			get;
			set;
		}
		public System.Collections.Generic.List<NpcActionDatabase> Actions
		{
			get
			{
				System.Collections.Generic.List<NpcActionDatabase> arg_23_0;
				if ((arg_23_0 = this.m_actions) == null)
				{
					arg_23_0 = (this.m_actions = Singleton<NpcManager>.Instance.GetNpcActions(this.Id));
				}
				return arg_23_0;
			}
		}
		public uint Gender
		{
			get;
			set;
		}
		public string LookAsString
		{
			get
			{
				string result;
				if (this.m_entityLook == null)
				{
					result = string.Empty;
				}
				else
				{
					if (string.IsNullOrEmpty(this.m_lookAsString))
					{
						this.m_lookAsString = this.Look.ToString();
					}
					result = this.m_lookAsString;
				}
				return result;
			}
			set
			{
				this.m_lookAsString = value;
				if (value != null)
				{
					this.m_entityLook = ActorLook.Parse(this.m_lookAsString);
				}
			}
		}
		[Ignore]
		public ActorLook Look
		{
			get
			{
				return this.m_entityLook;
			}
			set
			{
				this.m_entityLook = value;
				if (value != null)
				{
					this.m_lookAsString = value.ToString();
				}
			}
		}
		public short SpecialArtworkId
		{
			get;
			set;
		}
		public int TokenShop
		{
			get;
			set;
		}
		public void AssignFields(object d2oObject)
		{
			Stump.DofusProtocol.Classes.Npc npc = (Stump.DofusProtocol.Classes.Npc)d2oObject;
			this.Id = npc.id;
			this.NameId = npc.nameId;
			this.DialogMessagesId = (
				from x in npc.dialogMessages
				select x.ToArray()).ToArray<int[]>();
			this.DialogRepliesId = (
				from x in npc.dialogReplies
				select x.ToArray()).ToArray<int[]>();
			this.ActionsIds = npc.actions.ToArray();
			this.Gender = npc.gender;
			this.LookAsString = npc.look;
			this.TokenShop = npc.tokenShop;
		}
		public void BeforeSave(bool insert)
		{
			this.m_dialogMessagesIdCSV = this.DialogMessagesId.ToCSV(";", (int[] x) => x.ToCSV(","));
			this.m_dialogRepliesIdCSV = this.DialogRepliesId.ToCSV(";", (int[] x) => x.ToCSV(","));
			this.m_actionsIdsCSV = this.ActionsIds.ToCSV(",");
		}
		public void OnNpcSpawned(Stump.Server.WorldServer.Game.Actors.RolePlay.Npcs.Npc npc)
		{
			NpcTemplate.NpcSpawnedEventHandler npcSpawned = this.NpcSpawned;
			if (npcSpawned != null)
			{
				npcSpawned(this, npc);
			}
		}
		public override string ToString()
		{
			return string.Format("{0} ({1})", this.Name, this.Id);
		}
	}
}
