using Stump.Core.Extensions;
using Stump.Core.IO;
using Stump.ORM;
using Stump.ORM.SubSonic.SQLGeneration.Schema;
using Stump.Server.WorldServer.Game.Actors.RolePlay.Monsters;
using System.Collections.Generic;

namespace Stump.Server.WorldServer.Database.Monsters
{
	[TableName("monsters_spawns_dungeons_groups")]
	public class MonsterDungeonSpawnEntity : IAutoGeneratedRecord
	{
        // FIELDS
        private string m_possibleMonsterGradeIdsCSV;
        private uint[] m_possibleMonsterGradeIds;

        // PROPERTIES
        [PrimaryKey("Id", true)]
        public int Id
        {
            get;
            set;
        }
        public int DungeonSpawnId
        {
            get;
            set;
        }
        public int MonsterId
        {
            get;
            set;
        }
        public string PossibleMonsterGradeIdsCSV
        {
            get
            {
                return this.m_possibleMonsterGradeIdsCSV;
            }
            set
            {
                this.m_possibleMonsterGradeIdsCSV = value;
                this.m_possibleMonsterGradeIds = this.m_possibleMonsterGradeIdsCSV.FromCSV<uint>(",");
            }
        }
        [Ignore]
        public uint[] PossibleMonsterGradeIds
        {
            get
            {
                return this.m_possibleMonsterGradeIds;
            }
            set
            {
                this.m_possibleMonsterGradeIds = value;
                this.m_possibleMonsterGradeIdsCSV = this.m_possibleMonsterGradeIds.ToCSV(",");
            }
        }
        [Ignore]
        public List<MonsterGrade> PossibleMonsterGrades
        {
            get;
            set;
        }

        // CONSTRUCTORS
        public MonsterDungeonSpawnEntity()
        {
            this.PossibleMonsterGrades = new List<MonsterGrade>();
        }

        // METHODS
        internal Monster GenerateMonster(ref MonsterGroup group)
        {
            return new Monster(this.PossibleMonsterGrades.RandomElementOrDefault(), group);
        }
	}
}
