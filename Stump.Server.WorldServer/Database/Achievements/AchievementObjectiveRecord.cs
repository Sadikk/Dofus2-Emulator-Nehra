using Stump.Core.Reflection;
using Stump.DofusProtocol.Classes;
using Stump.DofusProtocol.Tools.D2o;
using Stump.ORM;
using Stump.ORM.SubSonic.SQLGeneration.Schema;
using Stump.Server.WorldServer.Game.Achievements;
using Stump.Server.WorldServer.Game.Achievements.Criterions;

namespace Stump.Server.WorldServer.Database.Achievements
{
    [D2OClass("AchievementObjective", "com.ankamagames.dofus.datacenter.quest", true), TableName("achievements_objectives")]
    public class AchievementObjectiveRecord : IAutoGeneratedRecord, ISaveIntercepter, IAssignedByD2O
    {
        // FIELDS
        private AchievementTemplate m_achievement;
        private AbstractCriterion m_criterion;

        // PROPERTIES
        [PrimaryKey("Id", false)]
        public uint Id
        {
            get;
            set;
        }
        public uint AchievementId
        {
            get;
            set;
        }
        [Ignore]
        public AchievementTemplate Achievement
        {
            get
            {
                if (this.m_achievement == null)
                {
                    this.m_achievement = Singleton<AchievementManager>.Instance.TryGetAchievement(this.AchievementId);
                }

                return this.m_achievement;
            }
        }
        public uint Order
        {
            get;
            set;
        }
        public uint NameId
        {
            get;
            set;
        }
        public string Criterion
        {
            get;
            set;
        }
        [Ignore]
        public AbstractCriterion AbstractCriterion
        {
            get
            {
                return this.m_criterion;
            }
        }

        // CONSTRUCTORS

        // METHODS
        public void Initialize()
        {
            this.m_criterion = AbstractCriterion.CreateCriterion(this);
            if (this.m_criterion != null)
            {
                this.m_criterion.AddUsefullness(this.Achievement);
            }
        }

        public void BeforeSave(bool insert)
        {

        }

        public virtual void AssignFields(object d2oObject)
        {
            var item = (AchievementObjective)d2oObject;
            this.Id = item.id;
            this.AchievementId = item.achievementId;
            this.Order = item.order;
            this.NameId = item.nameId;
            this.Criterion = item.criterion;
        }

        public DofusProtocol.Types.AchievementObjective GetAchievementObjective(PlayerAchievement player)
        {
            if (this.m_criterion == null)
            {
                return new DofusProtocol.Types.AchievementObjective((ushort)this.Id, 0);
            }
            else
            {
                return this.m_criterion.GetAchievementObjective(this, player);
            }
        }
        public DofusProtocol.Types.AchievementStartedObjective GetAchievementStartedObjective(PlayerAchievement player)
        {
            if (this.m_criterion == null)
            {
                return new DofusProtocol.Types.AchievementStartedObjective(this.Id, 1, 0);
            }
            else
            {
                return new DofusProtocol.Types.AchievementStartedObjective(this.Id, this.AbstractCriterion.MaxValue, this.AbstractCriterion.GetPlayerValue(player));
            }
        }
    }
}
