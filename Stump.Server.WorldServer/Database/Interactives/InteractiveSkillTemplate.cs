using Stump.Core.IO;
using Stump.Core.Reflection;
using Stump.DofusProtocol.Classes;
using Stump.DofusProtocol.Tools.D2o;
using Stump.ORM;
using Stump.ORM.SubSonic.SQLGeneration.Schema;
using Stump.Server.WorldServer.Game.Interactives;

namespace Stump.Server.WorldServer.Database.Interactives
{
	[D2OClass("Skill", "com.ankamagames.dofus.datacenter.jobs", true), TableName("interactives_skills_templates")]
	public class InteractiveSkillTemplate : IAutoGeneratedRecord, IAssignedByD2O
	{
		private int[] m_craftableItemIds;
		private string m_craftableItemIdsCSV;
		private InteractiveTemplate m_interactive;
		[PrimaryKey("Id", false)]
		public int Id
		{
			get;
			set;
		}
		public uint NameId
		{
			get;
			set;
		}
		public int ParentJobId
		{
			get;
			set;
		}
		public bool IsForgemagus
		{
			get;
			set;
		}
		public int ModifiableItemType
		{
			get;
			set;
		}
		public int GatheredRessourceItem
		{
			get;
			set;
		}
		public string CraftableItemIdsCSV
		{
			get
			{
				return this.m_craftableItemIdsCSV;
			}
			set
			{
				this.m_craftableItemIdsCSV = value;
                this.m_craftableItemIds = this.CraftableItemIdsCSV.FromCSV<int>(",");
			}
		}
		public int InteractiveId
		{
			get;
			set;
		}
		public string UseAnimation
		{
			get;
			set;
		}
		public bool IsRepair
		{
			get;
			set;
		}
		public int Cursor
		{
			get;
			set;
		}
		public bool AvailableInHouse
		{
			get;
			set;
		}
		public uint LevelMin
		{
			get;
			set;
		}
		[Ignore]
		public int[] CraftableItemIds
		{
			get
			{
				int[] arg_23_0;
				if ((arg_23_0 = this.m_craftableItemIds) == null)
				{
                    arg_23_0 = (this.m_craftableItemIds = this.CraftableItemIdsCSV.FromCSV<int>(","));
				}
				return arg_23_0;
			}
			set
			{
				this.m_craftableItemIds = value;
				this.CraftableItemIdsCSV = value.ToCSV(",");
			}
		}
		public InteractiveTemplate Interactive
		{
			get
			{
				InteractiveTemplate arg_23_0;
				if ((arg_23_0 = this.m_interactive) == null)
				{
					arg_23_0 = (this.m_interactive = Singleton<InteractiveManager>.Instance.GetTemplate(this.InteractiveId));
				}
				return arg_23_0;
			}
		}
		public void AssignFields(object d2oObject)
		{
			Skill skill = (Skill)d2oObject;
			this.Id = skill.id;
			this.NameId = skill.nameId;
			this.ParentJobId = skill.parentJobId;
			this.IsForgemagus = skill.isForgemagus;
			this.GatheredRessourceItem = skill.gatheredRessourceItem;
			this.CraftableItemIds = skill.craftableItemIds.ToArray();
			this.InteractiveId = skill.interactiveId;
			this.UseAnimation = skill.useAnimation;
			this.IsRepair = skill.isRepair;
			this.Cursor = skill.cursor;
			this.AvailableInHouse = skill.availableInHouse;
			this.LevelMin = skill.levelMin;
		}
	}
}
