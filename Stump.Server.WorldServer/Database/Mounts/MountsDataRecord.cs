using Stump.ORM.SubSonic.SQLGeneration.Schema;
using Stump.Core.IO;
using Stump.ORM;
using System;
using System.Linq;
using System.Collections.Generic;
using Stump.DofusProtocol.Types;
namespace Stump.Server.WorldServer.Database.Mounts
{
    [TableName("mounts_data")]
    public class MountsDataRecord : IAutoGeneratedRecord
    {
        private List<int> _ancestor = new List<int>();
        private string _ancestorCSV;
        private List<int> _behavior = new List<int>();
        private string _behaviorCSV;

        [PrimaryKey("Id", false)]
        public int Id
        {
            get;
            set;
        }
        public int CertificateId
        {
            get;
            set;
        }
        public int ItemId
        {
            get;
            set;
        }
        public int NameId
        {
            get;
            set;
        }
        public int Model
        {
            get;
            set;
        }
        [Ignore]
        public List<int> Ancestor
        {
            get
            {
                return this._ancestor;
            }
            set
            {
                this._ancestor = value;
                this._ancestorCSV = this._ancestor.ToCSV(",");
            }
        }
        [Ignore]
        public List<int> Behaviors
        {
            get
            {
                return this._behavior;
            }
            set
            {
                this._behavior = value;
                this._behaviorCSV = this._behavior.ToCSV(",");
            }
        }
        [NullString]
        public string AncestorCSV
        {
            get
            {
                return this._ancestorCSV;
            }
            set
            {
                this._ancestorCSV = value;
                this._ancestor = ((!string.IsNullOrEmpty(this._ancestorCSV)) ? this._ancestorCSV.FromCSV<int>(",").ToList<int>() : new List<int>());
            }
        }
        [NullString]
        public string BehaviorsCSV
        {
            get
            {
                return this._behaviorCSV;
            }
            set
            {
                this._behaviorCSV = value;
                this._behavior = ((!string.IsNullOrEmpty(this._behaviorCSV)) ? this._behaviorCSV.FromCSV<int>(",").ToList<int>() : new List<int>());
            }
        }
        public String Name
        {
            get;
            set;
        }
        public Boolean Sexe
        {
            get;
            set;
        }
        public int OwnerID 
        { 
            get; 
            set; 
        }
        public long Experience
        {
            get;
            set;
        }
        public long ExperienceForLevel
        {
            get;
            set;
        }
        public long ExperienceForNextLevel
        {
            get;
            set;
        }
        public sbyte Level
        {
            get;
            set;
        }
        public Boolean isRideable
        {
            get;
            set;
        }
        public int MaxPods
        {
            get;
            set;
        }
        public Boolean isWild
        {
            get;
            set;
        }
        public int Stamina
        {
            get;
            set;
        }
        public int Maturity
        {
            get;
            set;
        }
        public int MaturityForAdult
        {
            get;
            set;
        }
        public int Energy
        {
            get;
            set;
        }
        public int Serenity
        {
            get;
            set;
        }
        public int Aggressivity
        {
            get;
            set;
        }
        public int Love
        {
            get;
            set;
        }
        public int FecondationTime
        {
            get;
            set;
        }
        public Boolean isFecondationReady
        {
            get;
            set;
        }
        public int BoostLimiter
        {
            get;
            set;
        }
        public int ReproductionCount
        {
            get;
            set;
        }
        [Ignore]
        public List<ObjectEffectInteger> EffectList
        {
            get;
            set;
        }
        public Boolean InStable
        {
            get;
            set;
        }
        public Boolean InPaddock
        {
            get;
            set;
        }
        public Boolean isEquipped
        {
            get;
            set;
        }
        public Boolean isRiding
        {
            get;
            set;
        }
        [Ignore]
        public Boolean isNew
        {
            get;
            set;
        }
    }

}