using Stump.ORM;
using Stump.ORM.SubSonic.SQLGeneration.Schema;
using Stump.Server.BaseServer.Network;
using System;
using System.Net;

namespace Stump.Server.AuthServer.Database
{
    [TableName("ipbans")]
    public class IpBan : IAutoGeneratedRecord
    {
        private IPAddressRange m_ip;
        private string m_ipAsString;
        public long Id
        {
            get;
            set;
        }
        public string IPAsString
        {
            get
            {
                return this.m_ipAsString;
            }
            set
            {
                this.m_ipAsString = value;
                this.m_ip = IPAddressRange.Parse(this.IPAsString);
            }
        }
        public DateTime Date
        {
            get;
            set;
        }
        public TimeSpan? Duration
        {
            get;
            set;
        }
        public string BanReason
        {
            get;
            set;
        }
        public int? BannedBy
        {
            get;
            set;
        }
        public bool LifeBan
        {
            get
            {
                return !this.Duration.HasValue;
            }
        }
        [Ignore]
        public IPAddressRange IP
        {
            get
            {
                return this.m_ip;
            }
            set
            {
                this.m_ip = value;
                this.IPAsString = this.m_ip.ToString();
            }
        }

        public DateTime GetEndDate()
        {
            return this.LifeBan ? DateTime.MaxValue : this.Date.Add(this.Duration.Value);
        }

        public bool Match(IPAddress ip)
        {
            return this.IP.Match(ip);
        }

        public TimeSpan GetRemainingTime()
        {
            DateTime endDate = this.GetEndDate();
            return endDate - DateTime.Now;
        }
    }
}