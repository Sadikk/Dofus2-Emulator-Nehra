using Stump.DofusProtocol.Enums;
using Stump.ORM;
using Stump.ORM.SubSonic.SQLGeneration.Schema;
using Stump.Server.AuthServer.IPC;
using System;

namespace Stump.Server.AuthServer.Database
{
    [TableName("worlds")]
    public class WorldServer : IAutoGeneratedRecord
    {
        public int Id
        {
            get;
            set;
        }
        public string Name
        {
            get;
            set;
        }
        public ushort Port
        {
            get;
            set;
        }
        public string Address
        {
            get;
            set;
        }
        public bool RequireSubscription
        {
            get;
            set;
        }
        public int Completion
        {
            get;
            set;
        }
        public bool ServerSelectable
        {
            get;
            set;
        }
        public int CharCapacity
        {
            get;
            set;
        }
        public int? CharsCount
        {
            get;
            set;
        }
        public RoleEnum RequiredRole
        {
            get;
            set;
        }
        public ServerStatusEnum Status
        {
            get;
            set;
        }
        public bool Connected
        {
            get
            {
                return this.Status == ServerStatusEnum.ONLINE;
            }
        }
        [Ignore]
        public IPCClient IPCClient
        {
            get;
            set;
        }
        [Ignore]
        public DateTime LastPing
        {
            get;
            set;
        }

        public WorldServer()
        {
            this.Status = ServerStatusEnum.OFFLINE;
        }

        public void SetOnline(IPCClient client)
        {
            this.Status = ServerStatusEnum.ONLINE;
            this.LastPing = DateTime.Now;
            this.IPCClient = client;
        }

        public void SetOffline()
        {
            this.Status = ServerStatusEnum.OFFLINE;
            this.CharsCount = new int?(0);
            this.IPCClient = null;
        }

        public override string ToString()
        {
            return string.Format("{0}({1})", this.Name, this.Id);
        }
    }
}